function [y1,xf1,af2] = myNNc33(x1,xi1,ai2)
%MYNNC neural network simulation function.
%
% Auto-generated by MATLAB, 30-Apr-2021 10:34:33.
% 
% [y1,xf1,af2] = myNNc(x1,xi1,ai2) takes these arguments:
%   x1 = 3xTS matrix, input #1
%   xi1 = 3x2 matrix, initial 2 delay states for input #1.
%   ai1 = 10x2 matrix, initial 2 delay states for layer #1.
%   ai2 = 3x2 matrix, initial 2 delay states for layer #2.
% and returns:
%   y1 = 3xTS matrix, output #1
%   xf1 = 3x2 matrix, final 2 delay states for input #1.
%   af1 = 10x2 matrix, final 2 delay states for layer #1.
%   af2 = 3x2 matrix, final 2 delay states for layer #2.
% where TS is the number of timesteps.

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-3.16287073259162;-3.38272282629319;-3.23008772648999];
x1_step1.gain = [0.300608637870132;0.286549253557615;0.314030491999889];
x1_step1.ymin = -1;

% Layer 1
b1 = [2.792255353596407641;-2.0147736735555099585;0.07467462962725314457;-0.011047902937658546363;0.60274456341568372064;-0.013811593726586678457;0.006639065592891790768;0.0099900787401569369345;-0.80019545291892124617;-1.5497493504881942883];
IW1_1 = [-0.025761477835546411214 -0.10269281446403548397 -0.31511037885688364391 0.58339532631653134853 -0.31864926098635715235 0.66259610996385676085 -0.88417418589770313542 -1.5700310940556805317 -0.090885807473285770697;-0.33370335182005472774 -0.26233652236453575135 -0.17814672446216975321 -0.11561049673519743775 -0.1876470270629629622 0.052560632610079378868 -0.3305479979052027284 0.37835052932126989056 -0.33184922253564574923;-0.029454682381829973281 -0.038545767976781906972 -0.025033814990617690027 0.13777127820293702531 0.019907858067185840723 0.008027129946425320961 0.032824870561446152506 0.074091047595531964176 -0.022178719438572993411;0.071811390501781743878 0.27721804734483090904 0.33656127671432445325 0.14655451367843544408 0.28013255091847033551 -0.079013021094667387767 1.109103617696975963 0.37339407327986001706 -0.24601208363406706914;-0.076371227563668320215 -0.0023002375653507758577 0.002571326145671424656 0.30411483839882386127 0.17295285398755819162 0.014121086345805030152 -0.045117355725795373067 -0.087222149570478871294 -0.037353273846846384021;0.076793511816802786929 0.060006563984836051862 -0.014961493442252235889 0.41230429342296237571 0.080153695363349722336 -0.0013547271157735639273 0.0059376770406643309894 0.038889214974223242083 -0.07402537796471751752;-0.044953940020056662452 -0.027942842993807847501 -0.0054290421455548800236 0.23043375233256363499 0.13259526940999358247 0.0028164250332528596721 -0.015957120635952160709 -0.03077910168942117608 -0.021945390391282144221;0.089365429082670505556 -0.01849934654227923525 -0.035896908275136439614 0.047350986988092050312 0.11476289413883912494 -0.0066399337666010116096 -0.021249521675704839685 -0.030349271526506325231 -0.014335113638505647682;-0.097296258297463092402 -0.0029477394039384464952 0.0022111261710642923957 0.38037976991055766351 0.21973757469085505867 0.020683789671037410701 -0.055005616043221648714 -0.10941869494257371043 -0.045671139156020557071;0.078393913889162933351 0.045307024689255494254 -0.042606961021806354084 0.21247505805067973261 0.70701765060548682484 0.1144280109589731198 0.25831713110495535535 0.42499012411977604708 0.11262005240168131148];
LW1_2 = [0.89181018876014273022 -1.4813910370327236787 0.56942345264281302164 0.93610196826841329809 -0.91639436492312842386 -0.17841660771121967133;-0.32784414054273741668 0.8155354186186851706 -0.67919857015990436899 0.76130594835275766652 0.58685130628254711382 0.37987398172113479022;-0.55744120509243744177 0.44911196107312462145 0.45200979795108409132 0.5807342045000355446 -0.26200716581565630658 -0.40165337570043435633;-1.3587366708392216719 -0.43332514702478874824 -0.78638605308967768348 -1.2390564897148439449 -0.19251723203216417057 -0.52880415398748681355;-0.67218990252151045173 0.29800777615104379059 -0.2838623503402427084 0.13908253441956824892 -0.22196623834364659356 0.36597214604413391692;-1.0956238016561838933 0.24228451851520191318 0.29793585936358907285 0.9260872012298136946 -0.33289512087624484327 -0.23101175901432050019;-0.22142692712185677029 0.28302126151569123591 -0.35409931774762032353 0.10004007311417434378 -0.19684844474986329388 0.21426868147827465849;0.25395729688648144284 0.37234283270232554353 0.027608146475673115555 -0.1068002879548241163 -0.18869582033391352205 0.098472520928275686369;-0.83696887855101564924 0.37615063525297898206 -0.35848747932542024408 0.15774925704546105543 -0.27813878890762461227 0.46503060005108426411;-1.3196745066705419802 0.93919589365552613724 -0.021926845251770882284 -0.63358042722361218591 0.069055014750176543781 0.94353762586177525318];

% Layer 2
b2 = [0.23000827511816909765;-0.2629508599299622551;-0.11751039378920979939];
LW2_1 = [0.0017271881033033664558 -0.0090253200078940099688 -1.1000707846470383355 -0.00059893044081134490502 -1.3541485555713344002 0.65371593011932149775 0.71054551592138659455 1.7882257532446226289 -0.86536062367599331235 0.0025121797833617793248;-0.00087402560144565375963 0.024239408881998211059 2.5219325443982132384 0.0044569458079398507899 0.52115460444971906107 -1.685610735284092998 1.324591344553044836 1.0191700700835348847 0.33624974363715698367 -0.00096638821294995453596;-0.00070387783680455760955 -0.0024720385795944442402 0.040615165926613044922 0.0012220457498389239708 1.030858337821678683 0.38658940570521815872 -4.4330855704467220235 1.5646703735951712488 0.65362494560426098733 -0.0011710974596552512113];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.274661880603355;0.248511686939356;0.111109693180407];
y1_step1.xoffset = [-3.64886110927689;-4.02041388034323;-8.89485532229819];

% ===== SIMULATION ========

% Dimensions
TS = size(x1,2); % timesteps

% Input 1 Delay States
xd1 = mapminmax_apply(xi1,x1_step1);
xd1 = [xd1 zeros(3,1)];

% Layer Delay States
ad2 = [ai2 zeros(3,1)];

% Allocate Outputs
y1 = zeros(3,TS);

% Time loop
for ts=1:TS

      % Rotating delay state position
      xdts = mod(ts+1,3)+1;
      adts = mod(ts+1,3)+1;
    
    % Input 1
    xd1(:,xdts) = mapminmax_apply(x1(:,ts),x1_step1);
    
    % Layer 1
    tapdelay1 = reshape(xd1(:,mod(xdts-[0 1 2]-1,3)+1),9,1);
    tapdelay2 = reshape(ad2(:,mod(adts-[1 2]-1,3)+1),6,1);
    a1 = tansig_apply(b1 + IW1_1*tapdelay1 + LW1_2*tapdelay2);
    
    % Layer 2
    ad2(:,adts) = b2 + LW2_1*a1;
    
    % Output 1
    y1(:,ts) = mapminmax_reverse(ad2(:,adts),y1_step1);
end

% Final delay states
finalxts = TS+(1: 2);
xits = finalxts(finalxts<=2);
xts = finalxts(finalxts>2)-2;
finalats = TS+(1:2);
ats = mod(finalats-1,3)+1;
xf1 = [xi1(:,xits) x1(:,xts)];
af2 = ad2(:,ats);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
